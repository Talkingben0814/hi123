getgenv().PS_Owner = 1236337311
getgenv().FPS = 3

if getgenv().scriptinject == true then error("Alt control Script is already executed") end
getgenv().scriptinject = true

local Converted = {
    ["_ScreenGui"] = Instance.new("ScreenGui");
	["_Frame"] = Instance.new("Frame");
	["_UIGradient"] = Instance.new("UIGradient");
	["_UsernameFrame"] = Instance.new("Frame");
	["_UICorner"] = Instance.new("UICorner");
	["_UIGradient1"] = Instance.new("UIGradient");
	["_TextLabel"] = Instance.new("TextLabel");
	["_UserInfoFrame"] = Instance.new("Frame");
	["_UICorner1"] = Instance.new("UICorner");
	["_UIGradient2"] = Instance.new("UIGradient");
	["_Titles"] = Instance.new("Frame");
	["_UICorner2"] = Instance.new("UICorner");
	["_TextLabel1"] = Instance.new("TextLabel");
	["_TextLabel2"] = Instance.new("TextLabel");
	["_MainInfo"] = Instance.new("TextLabel");
	["_userid"] = Instance.new("TextLabel");
	["_Display Name"] = Instance.new("TextLabel");
	["_Username"] = Instance.new("TextLabel");
	["_ExtraInfo"] = Instance.new("TextLabel");
	["_AccountAge"] = Instance.new("TextLabel");
	["_BackDrop"] = Instance.new("Frame");
	["_UICorner3"] = Instance.new("UICorner");
	["_StatisticsFrame"] = Instance.new("Frame");
	["_UICorner4"] = Instance.new("UICorner");
	["_UIGradient3"] = Instance.new("UIGradient");
	["_Titles1"] = Instance.new("Frame");
	["_UICorner5"] = Instance.new("UICorner");
	["_TextLabel3"] = Instance.new("TextLabel");
	["_TextLabel4"] = Instance.new("TextLabel");
	["_Statistics"] = Instance.new("Frame");
	["_TextLabel5"] = Instance.new("TextLabel");
	["_TextLabel6"] = Instance.new("TextLabel");
	["_BeforeCash"] = Instance.new("TextLabel");
	["_AfterCash"] = Instance.new("TextLabel");
	["_Bounty"] = Instance.new("TextLabel");
	["_Time in server"] = Instance.new("TextLabel");
	["_BountyText"] = Instance.new("TextLabel");
	["_StatusFrame"] = Instance.new("Frame");
	["_UICorner6"] = Instance.new("UICorner");
	["_UIGradient4"] = Instance.new("UIGradient");
	["_TextLabel7"] = Instance.new("TextLabel");
	["_Frame1"] = Instance.new("Frame");
	["_UICorner7"] = Instance.new("UICorner");
	["_LogFrame"] = Instance.new("Frame");
	["_UICorner8"] = Instance.new("UICorner");
	["_UIGradient5"] = Instance.new("UIGradient");
	["_TextLabel8"] = Instance.new("TextLabel");
	["_BackDrop2"] = Instance.new("Frame");
	["_UICorner9"] = Instance.new("UICorner");
	["_LocalScript"] = Instance.new("LocalScript");
}

-- Properties:
Converted["_ScreenGui"].Parent = game.CoreGui
Converted["_ScreenGui"]["IgnoreGuiInset"] = true;
Converted["_ScreenGui"].Enabled = true;
Converted["_ScreenGui"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets;
Converted["_ScreenGui"]["Name"] = [[Gui]];
Converted["_ScreenGui"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

Converted["_Frame"].Parent = Converted["_ScreenGui"]
Converted["_Frame"].Size = UDim2.new(1, 0, 1, 0)

Converted["_UIGradient"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(33.00000183284283, 33.00000183284283, 33.00000183284283)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(45.00000111758709, 45.00000111758709, 45.00000111758709))
}
Converted["_UIGradient"].Rotation = -29
Converted["_UIGradient"].Parent = Converted["_Frame"]

Converted["_UsernameFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_UsernameFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_UsernameFrame"].BorderSizePixel = 0
Converted["_UsernameFrame"].Position = UDim2.new(0.320396513, 0, 0.130647853, 0)
Converted["_UsernameFrame"].Size = UDim2.new(0.358956933, 0, 0.0980766341, 0)
Converted["_UsernameFrame"].ZIndex = 2
Converted["_UsernameFrame"].Name = "UsernameFrame"
Converted["_UsernameFrame"].Parent = Converted["_Frame"]

Converted["_UICorner"].CornerRadius = UDim.new(0.300000012, 0)
Converted["_UICorner"].Parent = Converted["_UsernameFrame"]

Converted["_UIGradient1"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(29.000000171363354, 29.000000171363354, 29.000000171363354)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(25.000000409781933, 25.000000409781933, 25.000000409781933))
}
Converted["_UIGradient1"].Rotation = 81
Converted["_UIGradient1"].Parent = Converted["_UsernameFrame"]

Converted["_TextLabel"].Font = Enum.Font.SourceSans
Converted["_TextLabel"].Text = "HeavenSellz"
Converted["_TextLabel"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].TextScaled = true
Converted["_TextLabel"].TextSize = 14
Converted["_TextLabel"].TextWrapped = true
Converted["_TextLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel"].BackgroundTransparency = 1
Converted["_TextLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel"].BorderSizePixel = 0
Converted["_TextLabel"].Size = UDim2.new(1, 0, 1, 0)
Converted["_TextLabel"].Parent = Converted["_UsernameFrame"]

Converted["_UserInfoFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_UserInfoFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_UserInfoFrame"].BorderSizePixel = 0
Converted["_UserInfoFrame"].Position = UDim2.new(0.224984616, 0, 0.288347304, 0)
Converted["_UserInfoFrame"].Size = UDim2.new(0.26285246, 0, 0.420175701, 0)
Converted["_UserInfoFrame"].ZIndex = 2
Converted["_UserInfoFrame"].Name = "UserInfoFrame"
Converted["_UserInfoFrame"].Parent = Converted["_Frame"]

Converted["_UICorner1"].CornerRadius = UDim.new(0.100000001, 0)
Converted["_UICorner1"].Parent = Converted["_UserInfoFrame"]

Converted["_UIGradient2"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(43.00000123679638, 43.00000123679638, 43.00000123679638)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(33.00000183284283, 33.00000183284283, 33.00000183284283))
}
Converted["_UIGradient2"].Rotation = 81
Converted["_UIGradient2"].Parent = Converted["_UserInfoFrame"]

Converted["_Titles"].BackgroundColor3 = Color3.fromRGB(29.000002071261406, 29.000002071261406, 29.000002071261406)
Converted["_Titles"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Titles"].BorderSizePixel = 0
Converted["_Titles"].Position = UDim2.new(0, 0, -1.34115211e-07, 0)
Converted["_Titles"].Size = UDim2.new(0.99999994, 0, 0.22862184, 0)
Converted["_Titles"].ZIndex = 2
Converted["_Titles"].Name = "Titles"
Converted["_Titles"].Parent = Converted["_UserInfoFrame"]

Converted["_UICorner2"].CornerRadius = UDim.new(0.200000003, 0)
Converted["_UICorner2"].Parent = Converted["_Titles"]

Converted["_TextLabel1"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel1"].Text = "User Info"
Converted["_TextLabel1"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].TextScaled = true
Converted["_TextLabel1"].TextSize = 14
Converted["_TextLabel1"].TextWrapped = true
Converted["_TextLabel1"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel1"].BackgroundTransparency = 1
Converted["_TextLabel1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel1"].BorderSizePixel = 0
Converted["_TextLabel1"].Position = UDim2.new(0.0178518556, 0, 0.0580206998, 0)
Converted["_TextLabel1"].Size = UDim2.new(0.305774331, 0, 0.509256303, 0)
Converted["_TextLabel1"].Parent = Converted["_Titles"]

Converted["_TextLabel2"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel2"].Text = "Accounts Info"
Converted["_TextLabel2"].TextColor3 = Color3.fromRGB(115.00000834465027, 115.00000834465027, 115.00000834465027)
Converted["_TextLabel2"].TextScaled = true
Converted["_TextLabel2"].TextSize = 14
Converted["_TextLabel2"].TextWrapped = true
Converted["_TextLabel2"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel2"].BackgroundTransparency = 1
Converted["_TextLabel2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel2"].BorderSizePixel = 0
Converted["_TextLabel2"].Position = UDim2.new(0.015868444, 0, 0.571381271, 0)
Converted["_TextLabel2"].Size = UDim2.new(0.373804033, 0, 0.364196956, 0)
Converted["_TextLabel2"].Parent = Converted["_Titles"]

Converted["_MainInfo"].Font = Enum.Font.SourceSansBold
Converted["_MainInfo"].Text = "Main Info:"
Converted["_MainInfo"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_MainInfo"].TextScaled = true
Converted["_MainInfo"].TextSize = 14
Converted["_MainInfo"].TextWrapped = true
Converted["_MainInfo"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_MainInfo"].BackgroundTransparency = 1
Converted["_MainInfo"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_MainInfo"].BorderSizePixel = 0
Converted["_MainInfo"].Position = UDim2.new(0.0147080319, 0, 0.230908513, 0)
Converted["_MainInfo"].Size = UDim2.new(0.362676412, 0, 0.14310436, 0)
Converted["_MainInfo"].Name = "MainInfo"
Converted["_MainInfo"].Parent = Converted["_UserInfoFrame"]

Converted["_userid"].Font = Enum.Font.SourceSansBold
Converted["_userid"].Text = "User ID:"
Converted["_userid"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_userid"].TextScaled = true
Converted["_userid"].TextSize = 14
Converted["_userid"].TextWrapped = true
Converted["_userid"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_userid"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_userid"].BackgroundTransparency = 1
Converted["_userid"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_userid"].BorderSizePixel = 0
Converted["_userid"].Position = UDim2.new(0.0436378382, 0, 0.362490952, 0)
Converted["_userid"].Size = UDim2.new(0.912724257, 0, 0.0787154138, 0)
Converted["_userid"].Name = "userid"
Converted["_userid"].Parent = Converted["_UserInfoFrame"]

Converted["_Display Name"].Font = Enum.Font.SourceSansBold
Converted["_Display Name"].Text = "Display Name:"
Converted["_Display Name"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Display Name"].TextScaled = true
Converted["_Display Name"].TextSize = 14
Converted["_Display Name"].TextWrapped = true
Converted["_Display Name"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_Display Name"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Display Name"].BackgroundTransparency = 1
Converted["_Display Name"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Display Name"].BorderSizePixel = 0
Converted["_Display Name"].Position = UDim2.new(0.0436378382, 0, 0.44197005, 0)
Converted["_Display Name"].Size = UDim2.new(0.912724257, 0, 0.0787154138, 0)
Converted["_Display Name"].Name = "Display Name"
Converted["_Display Name"].Parent = Converted["_UserInfoFrame"]

Converted["_Username"].Font = Enum.Font.SourceSansBold
Converted["_Username"].Text = "Username:"
Converted["_Username"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Username"].TextScaled = true
Converted["_Username"].TextSize = 14
Converted["_Username"].TextWrapped = true
Converted["_Username"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_Username"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Username"].BackgroundTransparency = 1
Converted["_Username"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Username"].BorderSizePixel = 0
Converted["_Username"].Position = UDim2.new(0.0436378382, 0, 0.519241273, 0)
Converted["_Username"].Size = UDim2.new(0.912724257, 0, 0.0787154138, 0)
Converted["_Username"].Name = "Username"
Converted["_Username"].Parent = Converted["_UserInfoFrame"]

Converted["_ExtraInfo"].Font = Enum.Font.SourceSansBold
Converted["_ExtraInfo"].Text = "Extra Info:"
Converted["_ExtraInfo"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ExtraInfo"].TextScaled = true
Converted["_ExtraInfo"].TextSize = 14
Converted["_ExtraInfo"].TextWrapped = true
Converted["_ExtraInfo"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_ExtraInfo"].BackgroundTransparency = 1
Converted["_ExtraInfo"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_ExtraInfo"].BorderSizePixel = 0
Converted["_ExtraInfo"].Position = UDim2.new(0.0166915655, 0, 0.597395241, 0)
Converted["_ExtraInfo"].Size = UDim2.new(0.362676412, 0, 0.14310436, 0)
Converted["_ExtraInfo"].Name = "ExtraInfo"
Converted["_ExtraInfo"].Parent = Converted["_UserInfoFrame"]

Converted["_AccountAge"].Font = Enum.Font.SourceSansBold
Converted["_AccountAge"].Text = "Age: 15"
Converted["_AccountAge"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AccountAge"].TextScaled = true
Converted["_AccountAge"].TextSize = 14
Converted["_AccountAge"].TextWrapped = true
Converted["_AccountAge"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_AccountAge"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AccountAge"].BackgroundTransparency = 1
Converted["_AccountAge"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_AccountAge"].BorderSizePixel = 0
Converted["_AccountAge"].Position = UDim2.new(0.0436378382, 0, 0.74001652, 0)
Converted["_AccountAge"].Size = UDim2.new(0.912724257, 0, 0.0787154138, 0)
Converted["_AccountAge"].Name = "AccountAge"
Converted["_AccountAge"].Parent = Converted["_UserInfoFrame"]

Converted["_BackDrop"].BackgroundColor3 = Color3.fromRGB(26.00000225007534, 26.00000225007534, 26.00000225007534)
Converted["_BackDrop"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_BackDrop"].BorderSizePixel = 0
Converted["_BackDrop"].Position = UDim2.new(0.203336805, 0, 0.256957352, 0)
Converted["_BackDrop"].Size = UDim2.new(0.592387259, 0, 0.483644336, 0)
Converted["_BackDrop"].Name = "BackDrop"
Converted["_BackDrop"].Parent = Converted["_Frame"]

Converted["_UICorner3"].CornerRadius = UDim.new(0.0700000003, 0)
Converted["_UICorner3"].Parent = Converted["_BackDrop"]

Converted["_StatisticsFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_StatisticsFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_StatisticsFrame"].BorderSizePixel = 0
Converted["_StatisticsFrame"].Position = UDim2.new(0.511220336, 0, 0.289274961, 0)
Converted["_StatisticsFrame"].Size = UDim2.new(0.26285246, 0, 0.420175701, 0)
Converted["_StatisticsFrame"].ZIndex = 2
Converted["_StatisticsFrame"].Name = "StatisticsFrame"
Converted["_StatisticsFrame"].Parent = Converted["_Frame"]

Converted["_UICorner4"].CornerRadius = UDim.new(0.100000001, 0)
Converted["_UICorner4"].Parent = Converted["_StatisticsFrame"]

Converted["_UIGradient3"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(43.00000123679638, 43.00000123679638, 43.00000123679638)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(33.00000183284283, 33.00000183284283, 33.00000183284283))
}
Converted["_UIGradient3"].Rotation = 81
Converted["_UIGradient3"].Parent = Converted["_StatisticsFrame"]

Converted["_Titles1"].BackgroundColor3 = Color3.fromRGB(29.000002071261406, 29.000002071261406, 29.000002071261406)
Converted["_Titles1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Titles1"].BorderSizePixel = 0
Converted["_Titles1"].Position = UDim2.new(0, 0, -1.34115211e-07, 0)
Converted["_Titles1"].Size = UDim2.new(0.99999994, 0, 0.22862184, 0)
Converted["_Titles1"].ZIndex = 2
Converted["_Titles1"].Name = "Titles"
Converted["_Titles1"].Parent = Converted["_StatisticsFrame"]

Converted["_UICorner5"].CornerRadius = UDim.new(0.200000003, 0)
Converted["_UICorner5"].Parent = Converted["_Titles1"]

Converted["_TextLabel3"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel3"].Text = "Statistics"
Converted["_TextLabel3"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel3"].TextScaled = true
Converted["_TextLabel3"].TextSize = 14
Converted["_TextLabel3"].TextWrapped = true
Converted["_TextLabel3"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel3"].BackgroundTransparency = 1
Converted["_TextLabel3"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel3"].BorderSizePixel = 0
Converted["_TextLabel3"].Position = UDim2.new(0.0178518556, 0, 0.0580206998, 0)
Converted["_TextLabel3"].Size = UDim2.new(0.305774331, 0, 0.509256303, 0)
Converted["_TextLabel3"].Parent = Converted["_Titles1"]

Converted["_TextLabel4"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel4"].Text = "View alts statistics"
Converted["_TextLabel4"].TextColor3 = Color3.fromRGB(115.00000834465027, 115.00000834465027, 115.00000834465027)
Converted["_TextLabel4"].TextScaled = true
Converted["_TextLabel4"].TextSize = 14
Converted["_TextLabel4"].TextWrapped = true
Converted["_TextLabel4"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel4"].BackgroundTransparency = 1
Converted["_TextLabel4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel4"].BorderSizePixel = 0
Converted["_TextLabel4"].Position = UDim2.new(0.0158685036, 0, 0.571381211, 0)
Converted["_TextLabel4"].Size = UDim2.new(0.431602597, 0, 0.364196926, 0)
Converted["_TextLabel4"].Parent = Converted["_Titles1"]

Converted["_Statistics"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Statistics"].BackgroundTransparency = 1
Converted["_Statistics"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Statistics"].BorderSizePixel = 0
Converted["_Statistics"].Position = UDim2.new(0, 0, 0.228621662, 0)
Converted["_Statistics"].Size = UDim2.new(1, 0, 0.771378338, 0)
Converted["_Statistics"].Name = "Statistics"
Converted["_Statistics"].Parent = Converted["_StatisticsFrame"]

Converted["_TextLabel5"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel5"].Text = "Stock: (Before/After tax)"
Converted["_TextLabel5"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel5"].TextScaled = true
Converted["_TextLabel5"].TextSize = 14
Converted["_TextLabel5"].TextWrapped = true
Converted["_TextLabel5"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel5"].BackgroundTransparency = 1
Converted["_TextLabel5"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel5"].BorderSizePixel = 0
Converted["_TextLabel5"].Position = UDim2.new(0.0158683825, 0, 0.0228966977, 0)
Converted["_TextLabel5"].Size = UDim2.new(0.84034276, 0, 0.14310436, 0)
Converted["_TextLabel5"].Parent = Converted["_Statistics"]

Converted["_TextLabel6"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel6"].Text = "Extra Info:"
Converted["_TextLabel6"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel6"].TextScaled = true
Converted["_TextLabel6"].TextSize = 14
Converted["_TextLabel6"].TextWrapped = true
Converted["_TextLabel6"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel6"].BackgroundTransparency = 1
Converted["_TextLabel6"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel6"].BorderSizePixel = 0
Converted["_TextLabel6"].Position = UDim2.new(0.0158686247, 0, 0.420726836, 0)
Converted["_TextLabel6"].Size = UDim2.new(0.431602418, 0, 0.161935195, 0)
Converted["_TextLabel6"].Parent = Converted["_Statistics"]

Converted["_BeforeCash"].Font = Enum.Font.SourceSansBold
Converted["_BeforeCash"].Text = "$999,999,999"
Converted["_BeforeCash"].TextColor3 = Color3.fromRGB(23.000000528991222, 193.0000188946724, 0)
Converted["_BeforeCash"].TextScaled = true
Converted["_BeforeCash"].TextSize = 14
Converted["_BeforeCash"].TextWrapped = true
Converted["_BeforeCash"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_BeforeCash"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_BeforeCash"].BackgroundTransparency = 1
Converted["_BeforeCash"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_BeforeCash"].BorderSizePixel = 0
Converted["_BeforeCash"].Position = UDim2.new(0.0872755572, 0, 0.166001067, 0)
Converted["_BeforeCash"].Size = UDim2.new(0.912724257, 0, 0.108759314, 0)
Converted["_BeforeCash"].Name = "BeforeCash"
Converted["_BeforeCash"].Parent = Converted["_Statistics"]

Converted["_AfterCash"].Font = Enum.Font.SourceSansBold
Converted["_AfterCash"].Text = "$999,999,999"
Converted["_AfterCash"].TextColor3 = Color3.fromRGB(125.00000774860382, 125.00000774860382, 125.00000774860382)
Converted["_AfterCash"].TextScaled = true
Converted["_AfterCash"].TextSize = 14
Converted["_AfterCash"].TextWrapped = true
Converted["_AfterCash"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_AfterCash"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_AfterCash"].BackgroundTransparency = 1
Converted["_AfterCash"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_AfterCash"].BorderSizePixel = 0
Converted["_AfterCash"].Position = UDim2.new(0.0872755572, 0, 0.274760365, 0)
Converted["_AfterCash"].Size = UDim2.new(0.912724495, 0, 0.108134635, 0)
Converted["_AfterCash"].Name = "AfterCash"
Converted["_AfterCash"].Parent = Converted["_Statistics"]

Converted["_Bounty"].Font = Enum.Font.SourceSansBold
Converted["_Bounty"].Text = "Bounty: "
Converted["_Bounty"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Bounty"].TextScaled = true
Converted["_Bounty"].TextSize = 14
Converted["_Bounty"].TextWrapped = true
Converted["_Bounty"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_Bounty"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Bounty"].BackgroundTransparency = 1
Converted["_Bounty"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Bounty"].BorderSizePixel = 0
Converted["_Bounty"].Position = UDim2.new(0.0297531094, 0, 0.581003726, 0)
Converted["_Bounty"].Size = UDim2.new(0.912724257, 0, 0.113520786, 0)
Converted["_Bounty"].Name = "Bounty"
Converted["_Bounty"].Parent = Converted["_Statistics"]

Converted["_Time in server"].Font = Enum.Font.SourceSansBold
Converted["_Time in server"].Text = "Time in server:"
Converted["_Time in server"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Time in server"].TextScaled = true
Converted["_Time in server"].TextSize = 14
Converted["_Time in server"].TextWrapped = true
Converted["_Time in server"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_Time in server"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_Time in server"].BackgroundTransparency = 1
Converted["_Time in server"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Time in server"].BorderSizePixel = 0
Converted["_Time in server"].Position = UDim2.new(0.0436378382, 0, 0.801384449, 0)
Converted["_Time in server"].Size = UDim2.new(0.912724257, 0, 0.108759314, 0)
Converted["_Time in server"].Name = "Time in server"
Converted["_Time in server"].Parent = Converted["_Statistics"]

Converted["_BountyText"].Font = Enum.Font.SourceSansBold
Converted["_BountyText"].Text = "BountyText"
Converted["_BountyText"].TextColor3 = Color3.fromRGB(193.0000188946724, 193.0000188946724, 193.0000188946724)
Converted["_BountyText"].TextScaled = true
Converted["_BountyText"].TextSize = 14
Converted["_BountyText"].TextWrapped = true
Converted["_BountyText"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_BountyText"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_BountyText"].BackgroundTransparency = 1
Converted["_BountyText"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_BountyText"].BorderSizePixel = 0
Converted["_BountyText"].Position = UDim2.new(0.0694237649, 0, 0.692625105, 0)
Converted["_BountyText"].Size = UDim2.new(0.912724257, 0, 0.108759314, 0)
Converted["_BountyText"].Name = "BountyText"
Converted["_BountyText"].Parent = Converted["_Statistics"]

Converted["_StatusFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_StatusFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_StatusFrame"].BorderSizePixel = 0
Converted["_StatusFrame"].Position = UDim2.new(0.326131701, 0, 0.762373269, 0)
Converted["_StatusFrame"].Size = UDim2.new(0.0814162493, 0, 0.0605340637, 0)
Converted["_StatusFrame"].ZIndex = 2
Converted["_StatusFrame"].Name = "StatusFrame"
Converted["_StatusFrame"].Parent = Converted["_Frame"]

Converted["_UICorner6"].CornerRadius = UDim.new(0.400000006, 0)
Converted["_UICorner6"].Parent = Converted["_StatusFrame"]

Converted["_UIGradient4"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(43.00000123679638, 43.00000123679638, 43.00000123679638)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(33.00000183284283, 33.00000183284283, 33.00000183284283))
}
Converted["_UIGradient4"].Rotation = 81
Converted["_UIGradient4"].Parent = Converted["_StatusFrame"]

Converted["_TextLabel7"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel7"].Text = "Status:"
Converted["_TextLabel7"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel7"].TextScaled = true
Converted["_TextLabel7"].TextSize = 14
Converted["_TextLabel7"].TextWrapped = true
Converted["_TextLabel7"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel7"].BackgroundTransparency = 1
Converted["_TextLabel7"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel7"].BorderSizePixel = 0
Converted["_TextLabel7"].Position = UDim2.new(0.0875794291, 0, 0.257237107, 0)
Converted["_TextLabel7"].Size = UDim2.new(0.512162924, 0, 0.509256303, 0)
Converted["_TextLabel7"].Parent = Converted["_StatusFrame"]

Converted["_Frame1"].BackgroundColor3 = Color3.fromRGB(255, 0, 4.000000236555934)
Converted["_Frame1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_Frame1"].BorderSizePixel = 0
Converted["_Frame1"].Position = UDim2.new(0.640218377, 0, 0.168567598, 0)
Converted["_Frame1"].Size = UDim2.new(0.274953038, 0, 0.676579595, 0)
Converted["_Frame1"].Parent = Converted["_StatusFrame"]

Converted["_UICorner7"].CornerRadius = UDim.new(0.5, 0)
Converted["_UICorner7"].Parent = Converted["_Frame1"]

Converted["_LogFrame"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_LogFrame"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_LogFrame"].BorderSizePixel = 0
Converted["_LogFrame"].Position = UDim2.new(0.414244264, 0, 0.761445642, 0)
Converted["_LogFrame"].Size = UDim2.new(0.258681357, 0, 0.0605340637, 0)
Converted["_LogFrame"].ZIndex = 2
Converted["_LogFrame"].Name = "LogFrame"
Converted["_LogFrame"].Parent = Converted["_Frame"]

Converted["_UICorner8"].CornerRadius = UDim.new(0.400000006, 0)
Converted["_UICorner8"].Parent = Converted["_LogFrame"]

Converted["_UIGradient5"].Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(43.00000123679638, 43.00000123679638, 43.00000123679638)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(33.00000183284283, 33.00000183284283, 33.00000183284283))
}
Converted["_UIGradient5"].Rotation = 81
Converted["_UIGradient5"].Parent = Converted["_LogFrame"]

Converted["_TextLabel8"].Font = Enum.Font.SourceSansBold
Converted["_TextLabel8"].Text = "Loading..."
Converted["_TextLabel8"].TextColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel8"].TextScaled = true
Converted["_TextLabel8"].TextSize = 14
Converted["_TextLabel8"].TextWrapped = true
Converted["_TextLabel8"].TextXAlignment = Enum.TextXAlignment.Left
Converted["_TextLabel8"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Converted["_TextLabel8"].BackgroundTransparency = 1
Converted["_TextLabel8"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_TextLabel8"].BorderSizePixel = 0
Converted["_TextLabel8"].Position = UDim2.new(0.0299446341, 0, 0.241912797, 0)
Converted["_TextLabel8"].Size = UDim2.new(0.948462248, 0, 0.509256303, 0)
Converted["_TextLabel8"].Parent = Converted["_LogFrame"]

Converted["_BackDrop2"].BackgroundColor3 = Color3.fromRGB(26.00000225007534, 26.00000225007534, 26.00000225007534)
Converted["_BackDrop2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
Converted["_BackDrop2"].BorderSizePixel = 0
Converted["_BackDrop2"].Position = UDim2.new(0.320396513, 0, 0.753246725, 0)
Converted["_BackDrop2"].Size = UDim2.new(0.358956844, 0, 0.0789454654, 0)
Converted["_BackDrop2"].Name = "BackDrop2"
Converted["_BackDrop2"].Parent = Converted["_Frame"]

Converted["_UICorner9"].CornerRadius = UDim.new(0.300000012, 0)
Converted["_UICorner9"].Parent = Converted["_BackDrop2"]

local data_folder = game.Players.LocalPlayer:WaitForChild("DataFolder")
local leaderstats = game.Players.LocalPlayer:WaitForChild("leaderstats")
local startingcash = data_folder:WaitForChild("Currency").Value
local timeelapsed = tick()

local function YMCHG_fake_script() -- Frame.LocalScript 
	local function format(number)
		number = tostring(number)
		return number:reverse():gsub("...","%0,",math.floor((#number-1)/3)):reverse()
	end
	
	local function hms_format(Int)
		return string.format("%02i", Int)
	end
	
	local function convert_to_hms(seconds)
		local minutes = (seconds - seconds%60)/60
		seconds = seconds - minutes*60
		local hours = (minutes - minutes%60)/60
		minutes = minutes - hours*60
		return hms_format(hours)..":"..hms_format(minutes)..":"..hms_format(seconds)
	end
	
	local timeelapsed = tick()
	
	local mainframe = Converted["_Frame"]
	
	--// Username Script \\--
	local usernametext1 = mainframe.UsernameFrame.TextLabel
	
	usernametext1.Text = game.Players.LocalPlayer.Name
	
	--// User Info Script \\--
	local useridtext = mainframe.UserInfoFrame.userid
	local displaynametext = mainframe.UserInfoFrame["Display Name"]
	local usernametext = mainframe.UserInfoFrame.Username
	local agetext = mainframe.UserInfoFrame.AccountAge
	
	useridtext.Text = "User ID: "..game.Players.LocalPlayer.UserId
	displaynametext.Text = "Display Name: "..game.Players.LocalPlayer.DisplayName
	usernametext.Text = "Username: "..game.Players.LocalPlayer.Name
	agetext.Text = "Age: "..game.Players.LocalPlayer.AccountAge.." Days Old"
	
	--// Statistics Script \\--
	local stockbeforetext = mainframe.StatisticsFrame.Statistics.BeforeCash
	local stockaftertext = mainframe.StatisticsFrame.Statistics.AfterCash
	local bountytext = mainframe.StatisticsFrame.Statistics.BountyText
	local timeinservertext = mainframe.StatisticsFrame.Statistics["Time in server"]
	
	task.spawn(function()
		while task.wait(0.1) do
			pcall(function()
				stockbeforetext.Text = "$"..format(data_folder.Currency.Value)
			end)
		end
	end)
	
	task.spawn(function()
		while task.wait(0.1) do
			pcall(function()
                local taxAmount = data_folder.Currency.Value * 0.30
                local fullamount = data_folder.Currency.Value - taxAmount
                stockaftertext.Text = "$"..format(tonumber(fullamount))
			end)
		end
	end)
	
	task.spawn(function()
		while task.wait(0.1) do
			pcall(function()
				timeinservertext.Text = "Time In Server: "..tostring(convert_to_hms(math.floor(tick() - timeelapsed)))
			end)
		end
	end)
	
	task.spawn(function()
		while task.wait(0.1) do
			pcall(function()
				bountytext.Text = "Bounty: "..tostring(leaderstats.Wanted.Value)
			end)
		end
	end)
	

	
end
coroutine.wrap(YMCHG_fake_script)()
local mainframe = Converted["_Frame"]
local function status(status)
    if status == true then
        mainframe.StatusFrame.Frame.BackgroundColor = BrickColor.new("Lime green")
    else
        mainframe.StatusFrame.Frame.BackgroundColor = BrickColor.new("Really red")
    end
end

local function log(msg)
    mainframe.LogFrame.TextLabel.Text = msg
end

local Players = game:GetService('Players')
local Workspace = game:GetService('Workspace')
local replicatedStorage = game:GetService("ReplicatedStorage")
local mainEvent = replicatedStorage:WaitForChild("MainEvent")
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local IGNORED = workspace:WaitForChild("Ignored")	
local StarterGui = game:GetService("StarterGui")
local PLAYER_GUI = localPlayer:WaitForChild("PlayerGui")
local start_cash = game.Players.LocalPlayer:WaitForChild("DataFolder"):WaitForChild("Currency").Value
local Root = localPlayer.Character:WaitForChild("HumanoidRootPart")
local pre_drop = 0
local cash_drop = false

StarterGui:ClearAllChildren()
PLAYER_GUI:ClearAllChildren()
settings().Rendering.QualityLevel = 1
UserSettings().GameSettings.MasterVolume = 0
setfpscap(FPS)
RunService:Set3dRenderingEnabled(false)    


local function shout(message)
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("Shout", message)
end

local function add_or_update_bot()
    local success, result = pcall(function()
        return request({
            Url = "http://212.192.29.40:25824/api/bots/update",
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({
                owner = PS_Owner,
                userId = localPlayer.UserId,
                username = localPlayer.Name,
                currentCash = game.Players.LocalPlayer:WaitForChild("DataFolder"):WaitForChild("Currency").Value,
                startCash = start_cash,
                updatedAt = os.time(),

            })
        })

    end)

    if success then
        if result.StatusCode ~= 200 then
            return nil
        end
        return HttpService:JSONDecode(result.Body)
    else
        return nil
    end
end



local function is_bot(robloxUserId)
    local url = "http://212.192.29.40:25824/api/bots/owner/" .. PS_Owner

    local success, response = pcall(function()
        return request({
            Url = url,
            Method = "GET",
            Headers = {
                ["Content-Type"] = "application/json"
            }
        })
    end)

    if not success then
        return nil
    end

    if response.StatusCode ~= 200 then
        return nil
    end

    local data = HttpService:JSONDecode(response.Body)
    for _, id in ipairs(data) do
        if tostring(id) == tostring(robloxUserId) then
            return true
        end
    end
    return nil

end




local function getPlayerData(robloxUserId)
    local url = "http://212.192.29.40:25824/api/players/" .. robloxUserId .. "/" .. PS_Owner
    local success, response = pcall(function()
        return request({
            Url = url,
            Method = "GET",
            Headers = {
                ["Content-Type"] = "application/json"
            }
        })
    end)
    
    if success then
        if response.StatusCode ~= 200 then
            return nil
        end
        return HttpService:JSONDecode(response.Body)
    else
        return nil
    end
end



local function updatePlayerData(userId, fieldsToUpdate)
    local url = "http://212.192.29.40:25824/api/players/" .. userId .. "/" .. PS_Owner

    local success, response = pcall(function()
        return request({
            Url = url,
            Method = "PATCH",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(fieldsToUpdate)
        })
    end)

end



local function is_whitelisted_user(robloxUserId)
    local url = "http://212.192.29.40:25824/api/whitelist/" .. localPlayer.UserId
    local success, response = pcall(function()
        return request({
            Url = url,
            Method = "GET",
            Headers = {
                ["Content-Type"] = "application/json"
            }
        })
    end)
    
    if success then
        if response.StatusCode ~= 200 then
            return nil
        end
        local data = HttpService:JSONDecode(response.Body)

        for _, id in ipairs(data.whitelisted_users) do
            if tostring(id) == tostring(robloxUserId) then
                return true
            end
        end
        return nil
    else
        return nil
    end
end




---teleport setup
local function teleport(position)
    local character = localPlayer.Character
    if not character then return end

    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end

    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if hrp then
        hrp.CFrame = position
        hrp.Velocity = Vector3.zero
    end

    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid then
        local animator = humanoid:FindFirstChild("Animator")
        if animator then
            for _, track in pairs(animator:GetPlayingAnimationTracks()) do
                track:Stop()
            end
        end
    end
end

local lastPlatform = nil

local function createPlatform(position)
    if lastPlatform then
        lastPlatform:Destroy()
    end

    local platform = Instance.new("Part")
    platform.Name = "SafePlatform"
    platform.Size = Vector3.new(10, 1, 10)
    platform.Position = position - Vector3.new(0, 3.5, 0)
    platform.Anchored = true
    platform.CanCollide = true
    platform.BrickColor = BrickColor.new("Bright blue")
    platform.Parent = game.Workspace

    lastPlatform = platform

    return platform
end




--------


local function cashToInt(stringValue)
    local noDollarSign = string.sub(stringValue, 2, #stringValue)
    local noComma = string.gsub(noDollarSign, ",", "")
    local toInt = tonumber(noComma)
    
    return toInt
end

local function countFloorCash()
    local totalFloorCashAmount = 0

    for _,v in pairs(workspace.Ignored.Drop:GetChildren()) do
        if v:IsA("Part") then
            local amount = cashToInt(v.BillboardGui.TextLabel.Text)
            --TotalFloorCash
            totalFloorCashAmount += amount
        end
    end

    return totalFloorCashAmount
end


local function isOwnerInGame()
    for _, player in pairs(Players:GetPlayers()) do
        if player.UserId == PS_Owner then
            return true
        end
    end
    return false
end

local function isPlayerNearPosition(player, position, maxDistance)
    if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local playerPos = player.Character.HumanoidRootPart.Position
    local distance = (playerPos - position).Magnitude
    
    return distance <= maxDistance
end

local function dropCashIfNeeded()
    local centerPosition = Vector3.new(-263.755, -13.117, -378.038)
    local MAX_DISTANCE = 50
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    while true do
        task.wait(15.5)
        if countFloorCash() < pre_drop and isPlayerNearPosition(LocalPlayer, centerPosition, MAX_DISTANCE) then
            if isOwnerInGame() then
                game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("DropMoney", 15000)
            end
        end
    end
end



task.spawn(dropCashIfNeeded)



		
local function kick(player)
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Kick", player)
    print("kicked player")
end



local function track_kick(target)
    local vault_Position = CFrame.new(-664, -37, -284)
    local centerPosition = CFrame.new(-263.755, -13.117, -378.038)
    local MAX_ALLOWED_DISTANCE = 50
    local characterConnection


    local function setupTracking(character)
        teleport(vault_Position)
        createPlatform(Root.Position)
        task.wait(1)
        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Summon", target)
        task.wait(1)
        teleport(centerPosition)
        createPlatform(Root.Position)
        shout("Please leave the game " .. target.Name .. " or you will be kicked.")

        local humanoid = character:WaitForChild("Humanoid")
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        while target and target.Character == character and humanoidRootPart and humanoidRootPart.Parent do
            task.wait(1)
            local playerPos = humanoidRootPart.Position
            local distanceFromVault = (playerPos - vault_Position.Position).Magnitude
            if distanceFromVault > MAX_ALLOWED_DISTANCE then
                if not is_bot(target.UserId) then
                    kick(target)
                else
                    if target ~= localPlayer and target.Character then
                        target.Character:Destroy()
                    end
                    if characterConnection then characterConnection:Disconnect() end
                end
                break
            end
        end
    end

    if target.Character then
        task.spawn(function()
            setupTracking(target.Character)
        end)
    end

    -- Properly handle respawn every time
    characterConnection = target.CharacterAdded:Connect(setupTracking)

    -- Clean up on player leaving
    target.AncestryChanged:Connect(function(_, parent)
        if not parent then
            if characterConnection then characterConnection:Disconnect() end
        end
    end)
end

local use_codes = true

local function use_codes(codes)
    use_codes = false
    for i, code in ipairs(codes) do
        task.wait(5)
        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("EnterPromoCode", code)
    end
end


local function teleport2(position)
    task.spawn(function()
        while task.wait() do
            pcall(function()
                localPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = position
                localPlayer.Character:WaitForChild("HumanoidRootPart").Velocity = Vector3.new(0, 0, 0)
            end)
        end
    end)
end

local hasTeleported = false
local function start_polling()
    while true do
        local success, err = pcall(function()
            local result = add_or_update_bot()
            if result then
                if not isOwnerInGame() then
                    status(false)
                    log("Waiting for PS Owner to join")
                else
                    status(true)
                    log("Connected")
                end
                
                if localPlayer.UserId ~= PS_Owner and not hasTeleported then
                    task.wait(10)
                    local centerPosition = CFrame.new(-263.7553, -13.1171, -378.0378)
                    teleport2(centerPosition)
                    hasTeleported = true
                end

                if result.codes and use_codes then
                    task.spawn(function()
                        local success, err = pcall(function()
                            use_codes(result.codes)
                        end)
                        if not success then
                            warn("Error in use_codes:", err)
                        end
                    end)
                end

                pre_drop = result.pre_drop_amount
                if localPlayer.UserId == PS_Owner then
                    if cash_drop == true and result.cashDropEnabled == false then
                        for _, player in ipairs(Players:GetPlayers()) do
                            if player ~= localPlayer and not is_bot(player.UserId) and not is_whitelisted_user(player.UserId) then
                                local playerData = getPlayerData(player.UserId)
                                if not playerData then
                                    if player and player.Parent then
                                        task.spawn(function()
                                            local ok, err = pcall(function()
                                                track_kick(player)
                                            end)
                                            if not ok then
                                                warn("Error in track_kick:", err)
                                            end
                                        end)
                                        task.wait(5)
                                    end
                                end
                            end
                        end
                    end
                end
                cash_drop = result.cashDropEnabled
            else
                status(false)
                log("Failed to connect to database")
            end
        end)

        if not success then
            warn("Polling loop error:", err)
        end

        task.wait(5)
    end
end

-- Run polling in a protected task
task.spawn(function()
    local ok, err = pcall(start_polling)
    if not ok then
        warn("Polling crashed unexpectedly:", err)
    end
end)


local song_ids = {
    136409279011083,
    70734926325783,
    118168046372612,
    128995512586243,
    135740407478331,
    98211514942255,
    132906414367470,
    107974330948308,
    88132595887720,
    108097569887426,
    98826419963638,
    129605634516120,
    76137193886697,
    103637921138283,
    9045766377,
    9045765634,
}

local current_song_index = 1

local function play_song(song_id)
    local backpack = localPlayer:WaitForChild("Backpack")
    local boombox = backpack:FindFirstChild("[Boombox]")
    
    if not boombox then
        local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        boombox = character:FindFirstChild("[Boombox]")
    end
    
    if not boombox then
        warn("Boombox not found in backpack or character")
        return false
    end
    
    if boombox.Parent == backpack then
        local humanoid = (localPlayer.Character or localPlayer.CharacterAdded:Wait()):WaitForChild("Humanoid")
        humanoid:EquipTool(boombox)
        task.wait(0.1)
    end
    
    local args = {
        "Boombox",
        song_id
    }
    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
    
    return true
end

local function play_next_song()
    if #song_ids == 0 then return end
    
    local success = play_song(song_ids[current_song_index])
    
    if success then
        current_song_index = current_song_index % #song_ids + 1
        task.wait(120)
        play_next_song()
    end
end



-----------------
local function Track(user,DHC_bought, spentCash, startCash)
    local success, errorMessage = pcall(function()
        repeat task.wait() until game:GetService("Players"):FindFirstChild(user)
        local target = game:GetService("Players"):FindFirstChild(user)
        local start = tonumber(target:WaitForChild("DataFolder"):WaitForChild("Currency").Value)
        if startCash ~= 0 then
            start = startCash
        end
        local amount = DHC_bought - spentCash
        local need = start + amount
        if tonumber(target:WaitForChild("DataFolder"):WaitForChild("Currency").Value) >= need then
            print("player already reached goal")
            track_kick(target)
            return
        end

        local fields = {
            startCash = start,
            currentCash = tonumber(target:WaitForChild("DataFolder"):WaitForChild("Currency").Value),
            goal_cash = need,
            updatedAt = os.time()
        }
        local result = updatePlayerData(target.userId, fields)

        local new, last_cash_value, CASH_SPENT = 0, 0, spentCash
        local last_sent_time = 0
        repeat
            task.wait(1)
            local target = game:GetService("Players"):FindFirstChild(user)
            if target then
                new = tonumber(target:WaitForChild("DataFolder"):WaitForChild("Currency").Value)
                
                if last_cash_value == 0 and new > 0 then
                    last_cash_value = new
                elseif last_cash_value > 0 then
                    if new < last_cash_value then
                        local spent = last_cash_value - new
                        CASH_SPENT = CASH_SPENT + spent
                    end
                    last_cash_value = new > 0 and new or 0
                end
                
                if os.time() - last_sent_time >= 20 then
                    local fields = {
                        goal_cash = need - CASH_SPENT,
                        currentCash = new,
                        spentCash = CASH_SPENT,
                        updatedAt = os.time()
                    }
                    local result = updatePlayerData(target.userId, fields)
                    last_sent_time = os.time()
                end
            end
        until new + CASH_SPENT >= need or target == nil
    
        if new + CASH_SPENT >= need then
            local fields = {
                goal_cash = need - CASH_SPENT,
                currentCash = new,
                spentCash = CASH_SPENT,
                updatedAt = os.time(),
                processed = true
            }
            local result = updatePlayerData(target.userId, fields)
            track_kick(target)               
        end
        print("finished tracking")
    end)
    
    if not success then
        print("Error in Track function: " .. errorMessage)
    end
end

-----------------





if localPlayer.UserId == PS_Owner then
    local function onPlayerAdded(player)

        repeat
            task.wait(0.1)
        until player.Character and player.Character:FindFirstChild("FULLY_LOADED_CHAR") ~= nil   
        
        if is_bot(player.UserId) then
            if player ~= localPlayer and player.Character then
                player.Character:Destroy()
            end
            return
        end
        
        if not cash_drop then
         
            local playerData = getPlayerData(player.UserId)
            if playerData then
                print(HttpService:JSONEncode(playerData))
                local DHC_bought = playerData.player.DHC_bought or 0
                local spentCash = playerData.player.spentCash or 0
                local startCash = playerData.player.startCash or 0
                task.spawn(Track, player.Name, DHC_bought, spentCash, startCash)
                task.wait(1)
                game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Summon", player)
                task.wait(1)
            else
                task.wait(3)
                if not is_bot(player.UserId) then
                    track_kick(player)
                else
                    if is_whitelisted_user(player.UserId) then
                        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Summon", player)
                    end
                end
            end

        else
            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Summon", player)
        end
    end
    

    task.spawn(play_next_song)
    local isroleplay = function()
    local roleplay = game:GetService("Players"):GetAttribute("Roleplay")
        return roleplay or false 
    end 
    if isroleplay() == false then
        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("RoleplayModeChange")
    end

    task.spawn(function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= localPlayer then
                if player and player.Parent then

                    if is_bot(player.UserId) then
                        player.Character:Destroy()
                    else
                        task.spawn(function()
                            onPlayerAdded(player)
                        end)

                        task.wait(10)
                    end
                end
            end
        end
    end)


    Players.PlayerAdded:Connect(onPlayerAdded)
else

    local function removeCharacter(player)
        if player ~= localPlayer and player.Character then
            player.Character:Destroy()
        end
    end

    for _, player in ipairs(Players:GetPlayers()) do
        removeCharacter(player)
    end

    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            removeCharacter(player)
        end)
    end)

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            player.CharacterAdded:Connect(function()
                removeCharacter(player)
            end)
        end
    end


end


if localPlayer.UserId == PS_Owner then
    local centerPosition = CFrame.new(-263.75531005859375, -13.117109298706055, -378.037841796875)
    teleport(centerPosition)
    createPlatform(Root.Position)
end

task.wait(10)
--------------------------------------------------------------
local hideCash = true		
if hideCash == true then
    for _, v in pairs(IGNORED.Drop:GetChildren()) do
        if v:IsA("Part") then
            if v:FindFirstChild("Decal") then
                v.Decal:Destroy()
                v.Decal:Destroy() 
            end

            if v:FindFirstChild("BillboardGui") then
                v.BillboardGui.Enabled = false
            end
            v.Transparency = 1
        end
    end
else
    for _, v in pairs(IGNORED.Drop:GetChildren()) do
        if v:IsA("Part") then
            if v:FindFirstChild("BillboardGui") then
                v.BillboardGui.Enabled = true
            end
            v.Transparency = 0
        end
    end
end

IGNORED.Drop.ChildAdded:Connect(function(child)
    if child:IsA("Part") then
        if hideCash then
            task.wait(0.5)
            for _, decal in pairs(child:GetChildren()) do
                if decal:IsA("Decal") then
                    decal:Destroy()
                end
            end

            if child:FindFirstChild("BillboardGui") then
                child.BillboardGui.Enabled = false
            end
            child.Transparency = 1
        end
    end
end)

local Lighting = game:GetService("Lighting")

-- Remove any existing Sky object
local sky = Lighting:FindFirstChildOfClass("Sky")
if sky then
    sky:Destroy()  -- Remove the sky object
end

-- Remove the Atmosphere if it exists
local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
if atmosphere then
    atmosphere:Destroy()  -- Remove the atmosphere to eliminate clouds
end

-- Optionally, you can also disable the default environment by clearing the lighting settings:

Lighting.Ambient = Color3.fromRGB(255, 255, 255)  -- Set ambient lighting to white (or black for a darker look)
Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)  -- Set outdoor lighting
Lighting.Brightness = 0  -- Set lighting brightness to 0
Lighting.ExposureCompensation = -100  -- Make the scene as dark as possible

-- Optionally set the `Sky` to a fully transparent Sky (if you want no visual sky at all)
local emptySky = Instance.new("Sky")
emptySky.SkyboxBk = "rbxassetid://1"  -- Transparent texture
emptySky.SkyboxDn = "rbxassetid://1"  -- Transparent texture
emptySky.SkyboxFt = "rbxassetid://1"  -- Transparent texture
emptySky.SkyboxLf = "rbxassetid://1"  -- Transparent texture
emptySky.SkyboxRt = "rbxassetid://1"  -- Transparent texture
emptySky.SkyboxUp = "rbxassetid://1"  -- Transparent texture
emptySky.Parent = Lighting


local names = {"SafePlatform", "Ignored", "Players", "Camera", "Terrain",game.Players.LocalPlayer.Name}
for _, instance in workspace:GetChildren() do
        if not table.find(names, instance.Name) then
            instance:Destroy()
        end
end

local names = {"Drop", game.Players.LocalPlayer.Name}
for _, instance in workspace.Ignored:GetChildren() do
        if not table.find(names, instance.Name) then
            instance:Destroy()
        end
end

--------------------------------------------











local GC = getconnections or get_signal_cons
if GC then
    for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
        if v["Disable"] then
            v["Disable"](v)
        elseif v["Disconnect"] then
            v["Disconnect"](v)
        end
    end
end
